/* tslint:disable */
/* eslint-disable */
/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { BloomEndEnum } from './BloomEndEnum';
import {
    BloomEndEnumFromJSON,
    BloomEndEnumFromJSONTyped,
    BloomEndEnumToJSON,
} from './BloomEndEnum';
import type { BloomStartEnum } from './BloomStartEnum';
import {
    BloomStartEnumFromJSON,
    BloomStartEnumFromJSONTyped,
    BloomStartEnumToJSON,
} from './BloomStartEnum';

/**
 * 
 * @export
 * @interface PlantInformation
 */
export interface PlantInformation {
    /**
     * 
     * @type {number}
     * @memberof PlantInformation
     */
    readonly id: number;
    /**
     * 
     * @type {number}
     * @memberof PlantInformation
     */
    readonly plant: number;
    /**
     * 
     * @type {BloomStartEnum}
     * @memberof PlantInformation
     */
    bloom_start?: BloomStartEnum;
    /**
     * 
     * @type {BloomEndEnum}
     * @memberof PlantInformation
     */
    bloom_end?: BloomEndEnum;
    /**
     * 
     * @type {string}
     * @memberof PlantInformation
     */
    height_min?: string;
    /**
     * 
     * @type {string}
     * @memberof PlantInformation
     */
    height_max?: string;
}

/**
 * Check if a given object implements the PlantInformation interface.
 */
export function instanceOfPlantInformation(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "plant" in value;

    return isInstance;
}

export function PlantInformationFromJSON(json: any): PlantInformation {
    return PlantInformationFromJSONTyped(json, false);
}

export function PlantInformationFromJSONTyped(json: any, ignoreDiscriminator: boolean): PlantInformation {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'plant': json['plant'],
        'bloom_start': !exists(json, 'bloom_start') ? undefined : BloomStartEnumFromJSON(json['bloom_start']),
        'bloom_end': !exists(json, 'bloom_end') ? undefined : BloomEndEnumFromJSON(json['bloom_end']),
        'height_min': !exists(json, 'height_min') ? undefined : json['height_min'],
        'height_max': !exists(json, 'height_max') ? undefined : json['height_max'],
    };
}

export function PlantInformationToJSON(value?: PlantInformation | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'bloom_start': BloomStartEnumToJSON(value.bloom_start),
        'bloom_end': BloomEndEnumToJSON(value.bloom_end),
        'height_min': value.height_min,
        'height_max': value.height_max,
    };
}

