/* tslint:disable */
/* eslint-disable */
/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { PlantIdentifier } from './PlantIdentifier';
import {
    PlantIdentifierFromJSON,
    PlantIdentifierFromJSONTyped,
    PlantIdentifierToJSON,
} from './PlantIdentifier';
import type { PlantInformation } from './PlantInformation';
import {
    PlantInformationFromJSON,
    PlantInformationFromJSONTyped,
    PlantInformationToJSON,
} from './PlantInformation';

/**
 * 
 * @export
 * @interface Plant
 */
export interface Plant {
    /**
     * 
     * @type {number}
     * @memberof Plant
     */
    readonly id: number;
    /**
     * 
     * @type {PlantIdentifier}
     * @memberof Plant
     */
    identifier: PlantIdentifier;
    /**
     * 
     * @type {PlantInformation}
     * @memberof Plant
     */
    info: PlantInformation;
    /**
     * 
     * @type {Date}
     * @memberof Plant
     */
    readonly datetime_added: Date;
    /**
     * 
     * @type {string}
     * @memberof Plant
     */
    description: string;
}

/**
 * Check if a given object implements the Plant interface.
 */
export function instanceOfPlant(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "identifier" in value;
    isInstance = isInstance && "info" in value;
    isInstance = isInstance && "datetime_added" in value;
    isInstance = isInstance && "description" in value;

    return isInstance;
}

export function PlantFromJSON(json: any): Plant {
    return PlantFromJSONTyped(json, false);
}

export function PlantFromJSONTyped(json: any, ignoreDiscriminator: boolean): Plant {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'identifier': PlantIdentifierFromJSON(json['identifier']),
        'info': PlantInformationFromJSON(json['info']),
        'datetime_added': (new Date(json['datetime_added'])),
        'description': json['description'],
    };
}

export function PlantToJSON(value?: Plant | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'identifier': PlantIdentifierToJSON(value.identifier),
        'info': PlantInformationToJSON(value.info),
        'description': value.description,
    };
}

